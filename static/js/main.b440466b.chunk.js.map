{"version":3,"sources":["AppBar.js","BigTextField.js","MiddleColumn.js","Yeetify/Tokeniser/Token.js","Yeetify/Tokeniser/TokenList.js","Yeetify/Tokeniser/Symbols.js","Yeetify/Tokeniser/Scanners.js","Yeetify/Tokeniser/Tokeniser.js","Yeetify/Yeetify.js","Translator.js","App.js","serviceWorker.js","index.js"],"names":["withStyles","root","flexGrow","grow","menuButton","marginLeft","marginRight","props","classes","react_default","a","createElement","className","AppBar_default","position","Toolbar_default","IconButton_default","color","aria-label","Menu_default","Typography_default","variant","OutlinedTextFields","state","multiline","e","this","setState","value","target","_this2","TextField_default","id","label","fullWidth","rows","defaultValue","textField","margin","ref","input","onChange","bind","InputProps","React","Component","MiddleColumn","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","Grid_default","container","alignItems","spacing","item","xs","Button_default","onClick","yeetify","deyeetify","href","TokenTypes","freeze","null","word","number","string","symbol","space","comment","newline","preprocessor","eof","Token","type","createClass","key","get","length","TokenList","tokens","index","token","splice","concat","map","join","Symbols","Scanner","constructor","TypeError","undefined","get_first_token","Scanners","text","found","exec","i","text_section","slice","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","err","return","tokenise","arr","scan_one_token","push","tokenise_as_array","Error","yeetableTypes","tokenlist","yeetableTokens","getAt","isTokenYeetable","getYeetableTokens","yeets","nYeets","currentPower","currentCount","bin","parseInt","String","toString","yeet","repeat","b","Math","pow","generateYeets","keys","sort","random","yeetMappings","yeetableToken","shift","mapYeetsToYeetableTokens","hashDefineTokens","defines","generateHashDefineTokens","padded","padSymbols","prependTokens","mapTokensToYeets","valueString","_i","_yeetableTypes","yeetableType","CenteredGrid","fieldHeight","yeeted","originalField","getValue","yeetedField","setValue","alert","window","innerHeight","updateDimensions","addEventListener","removeEventListener","HeightedBigTextField","theme","height","unit","BigTextField","style","padding","justify","innerRef","field","src_MiddleColumn","deyeetity","App","src_AppBar","Translator","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"+RA4CeA,2BAnCA,CACbC,KAAM,CACJC,SAAU,GAEZC,KAAM,CACJD,SAAU,GAEZE,WAAY,CACVC,YAAa,GACbC,YAAa,KA0BFN,CAtBf,SAAsBO,GAAO,IACnBC,EAAYD,EAAZC,QACR,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAWJ,EAAQP,MACtBQ,EAAAC,EAAAC,cAACE,EAAAH,EAAD,CAAQI,SAAS,UACfL,EAAAC,EAAAC,cAACI,EAAAL,EAAD,KACED,EAAAC,EAAAC,cAACK,EAAAN,EAAD,CAAYE,UAAWJ,EAAQJ,WAAYa,MAAM,UAAUC,aAAW,QACpET,EAAAC,EAAAC,cAACQ,EAAAT,EAAD,OAEFD,EAAAC,EAAAC,cAACS,EAAAV,EAAD,CAAYW,QAAQ,KAAKJ,MAAM,UAAUL,UAAWJ,EAAQL,MAA5D,0FCmBKmB,6MA7CbC,MAAQ,CACNC,UAAW,sFAGJC,GACPC,KAAKC,SAAS,CACZC,MAAOH,EAAEI,OAAOD,2CAKlB,OAAOF,KAAKH,MAAMK,uCAGXA,GACPF,KAAKC,SAAS,CACZC,MAAOA,qCAIF,IAAAE,EAAAJ,KACP,OACIjB,EAAAC,EAAAC,cAACoB,EAAArB,EAAD,CACEsB,GAAG,4BACHC,MAAOP,KAAKnB,MAAM0B,MAClBT,WAAS,EACTU,WAAS,EACTC,KAAM,EACNC,aAAa,GACbxB,UAAWc,KAAKnB,MAAMC,QAAQ6B,UAC9BC,OAAO,SACPjB,QAAQ,WACRkB,IAAK,SAAAC,GAAK,OAAIV,EAAKU,MAAQA,GAC3BZ,MAAOF,KAAKH,MAAMK,MAClBa,SAAUf,KAAKe,SAASC,KAAKhB,MAC7BiB,WAAY,CAAEnC,QAAS,CAAEgC,MAAOd,KAAKnB,MAAMC,QAAQ6B,qBApC5BO,IAAMC,4BCwBxBC,cAtBX,SAAAA,IAAc,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAtB,KAAAoB,IACVC,EAAAC,OAAAE,EAAA,EAAAF,CAAAtB,KAAAsB,OAAAG,EAAA,EAAAH,CAAAF,GAAAM,KAAA1B,QACKH,MAAQ,GAFHwB,wEAMV,OACItC,EAAAC,EAAAC,cAAC0C,EAAA3C,EAAD,CAAM4C,WAAS,EAACC,WAAW,SAASC,QAAS,IACzC/C,EAAAC,EAAAC,cAAC0C,EAAA3C,EAAD,CAAM+C,MAAI,EAACC,GAAI,IACXjD,EAAAC,EAAAC,cAACgD,EAAAjD,EAAD,CAAQwB,WAAS,EAACb,QAAQ,YAAYJ,MAAM,UAAU2C,QAASlC,KAAKnB,MAAMsD,SAA1E,WAEJpD,EAAAC,EAAAC,cAAC0C,EAAA3C,EAAD,CAAM+C,MAAI,EAACC,GAAI,IACXjD,EAAAC,EAAAC,cAACgD,EAAAjD,EAAD,CAAQwB,WAAS,EAACb,QAAQ,YAAYJ,MAAM,YAAY2C,QAASlC,KAAKnB,MAAMuD,WAA5E,aAEJrD,EAAAC,EAAAC,cAAC0C,EAAA3C,EAAD,CAAM+C,MAAI,EAACC,GAAI,IACXjD,EAAAC,EAAAC,cAACgD,EAAAjD,EAAD,CAAQwB,WAAS,EAACb,QAAQ,YAAYQ,OAAO,SAASkC,KAAK,+CAA3D,mCAjBOnB,IAAMC,WCJpBmB,EAAahB,OAAOiB,OAAO,CACpCC,KAAO,EACPC,KAAO,EACPC,OAAS,EACTC,OAAS,EACTC,OAAS,EACTC,MAAQ,EACRC,QAAU,EACVC,QAAU,EACVC,aAAe,EACfC,IAAM,IAGGC,EAAb,WACI,SAAAA,EAAYC,EAAMjD,GAAQoB,OAAAC,EAAA,EAAAD,CAAAtB,KAAAkD,GACtBlD,KAAKmD,KAAOA,EACZnD,KAAKE,MAAQA,EAHrB,OAAAoB,OAAA8B,EAAA,EAAA9B,CAAA4B,EAAA,EAAAG,IAAA,SAAAC,IAAA,WAOQ,OAAOtD,KAAKE,MAAMqD,UAP1B,EAAAF,IAAA,OAAAnD,MAAA,WAWQ,OAAO,IAAIgD,EAAMZ,EAAWE,KAAM,MAX1C,CAAAa,IAAA,MAAAnD,MAAA,WAeQ,OAAO,IAAIgD,EAAMZ,EAAWW,IAAK,QAfzCC,EAAA,GCbqBM,aACjB,SAAAA,EAAYC,GAASnC,OAAAC,EAAA,EAAAD,CAAAtB,KAAAwD,GACjBxD,KAAKyD,OAASA,oDAeZC,GACF,OAAO1D,KAAKyD,OAAOC,oCAGdA,EAAOC,GACZ3D,KAAKyD,OAAOG,OAAOF,EAAO,EAAGC,yCAGnBF,GACVzD,KAAKyD,OAASA,EAAOI,OAAO7D,KAAKyD,4CApBjC,OAAOzD,KAAKyD,OAAOK,IAAI,SAAAH,GAAK,OAAIA,EAAMR,OAAMY,KAAK,wCAIjD,OAAO/D,KAAKyD,OAAOK,IAAI,SAAAH,GAAK,OAAIA,EAAMzD,QAAO6D,KAAK,mCAIlD,OAAO/D,KAAKyD,OAAOF,gBCddS,EAAU,CACnB,CACI,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KAEJ,CACI,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MAEJ,CACI,MACA,QC/CFC,EACF,SAAAA,IACI,GADW3C,OAAAC,EAAA,EAAAD,CAAAtB,KAAAiE,GACPjE,KAAKkE,cAAgBD,EACrB,MAAM,IAAIE,UAAU,4DAGxB,QAAqCC,IAAjCpE,KAAKqE,gBAAgB,QACrB,MAAM,IAAIF,UAAU,iDAwFnBG,EAAW,8LAlFGC,GACnB,IACIC,EADU,gBACMC,KAAKF,GACzB,OAAIC,EAAc,IAAItB,EAAMZ,EAAWG,KAAM+B,EAAM,IAC5C,YALWP,gMAUCM,GACnB,IAGIC,EAHS,oBAGMC,KAAKF,GACxB,OAAIC,EAAc,IAAItB,EAAMZ,EAAWI,OAAQ8B,EAAM,KACrDA,EAJa,wBAIEC,KAAKF,IACH,IAAIrB,EAAMZ,EAAWI,OAAQ8B,EAAM,KACpDA,EALa,eAKEC,KAAKF,IACF,IAAIrB,EAAMZ,EAAWI,OAAQ8B,EAAM,IAC9C,YAXaP,gMAgBDM,GACnB,IACIC,EADS,sBACMC,KAAKF,GACxB,OAAIC,EAAc,IAAItB,EAAMZ,EAAWK,OAAQ6B,EAAM,IAC9C,YALaP,gMAUDM,GACnB,IACIC,EADW,OACMC,KAAKF,GAC1B,OAAIC,EAAc,IAAItB,EAAMZ,EAAWO,MAAO2B,EAAM,IAC7C,YALYP,gMAUAM,GACnB,IAAK,IAAIG,EAAIV,EAAQT,OAAO,EAAGmB,GAAK,EAAGA,IAAK,CACxC,IAAIC,EAAeJ,EAAKK,MAAM,EAAGF,EAAE,GADKG,GAAA,EAAAC,GAAA,EAAAC,OAAAX,EAAA,IAExC,QAAAY,EAAAC,EAAmBjB,EAAQU,GAA3BQ,OAAAC,cAAAN,GAAAG,EAAAC,EAAAG,QAAAC,MAAAR,GAAA,EAA+B,CAC3B,GAAIF,IADuBK,EAAA9E,MACE,OAAO,IAAIgD,EAAMZ,EAAWM,OAAQ+B,IAH7B,MAAAW,GAAAR,GAAA,EAAAC,EAAAO,EAAA,YAAAT,GAAA,MAAAI,EAAAM,QAAAN,EAAAM,SAAA,WAAAT,EAAA,MAAAC,IAM5C,OAAO,YARad,gMAaDM,GACnB,MAAgB,OAAZA,EAAK,GAAoB,IAAIrB,EAAMZ,EAAWS,QAASwB,EAAK,IACzD,YAHcN,gMAQFM,GACnB,IAEIC,EAFc,WAEMC,KAAKF,GAC7B,OAAIC,EAAc,IAAItB,EAAMZ,EAAWQ,QAAS0B,EAAM,KACtDA,EAHkB,eAGEC,KAAKF,IACP,IAAIrB,EAAMZ,EAAWQ,QAAS0B,EAAM,IAE/C,YATcP,gMAcFM,GACnB,IACIC,EADU,OACMC,KAAKF,GACzB,OAAIC,EAAc,IAAItB,EAAMZ,EAAWU,aAAcwB,EAAM,IACpD,YALmBP,ICrF3B,SAASuB,EAASjB,GACrB,OAAO,IAAIf,EAGf,SAA2Be,GACvB,IAAIkB,EAAM,GACV,KAAOlB,GAAiB,KAATA,GAAa,CACxB,IAAIZ,EAAQ+B,EAAenB,GAC3BkB,EAAIE,KAAKhC,GACTY,EAAOA,EAAKK,MAAMjB,EAAMJ,QAG5B,OADAkC,EAAIE,KAAKzC,EAAMD,OACRwC,EAXcG,CAAkBrB,IAc3C,SAASmB,EAAenB,GAAM,IAAAM,GAAA,EAAAC,GAAA,EAAAC,OAAAX,EAAA,IAC1B,QAAAY,EAAAC,EAAoBX,EAApBY,OAAAC,cAAAN,GAAAG,EAAAC,EAAAG,QAAAC,MAAAR,GAAA,EAA8B,KACtBlB,EADsBqB,EAAA9E,MACNmE,gBAAgBE,GACpC,GAAc,OAAVZ,EACA,OAAOA,GAJW,MAAA2B,GAAAR,GAAA,EAAAC,EAAAO,EAAA,YAAAT,GAAA,MAAAI,EAAAM,QAAAN,EAAAM,SAAA,WAAAT,EAAA,MAAAC,GAO1B,MAAM,IAAIc,MAAJ,+CAAAhC,OAAyDU,ICtBnE,IAAMuB,EAAgB,CAACxD,EAAWG,KAAMH,EAAWI,OAAQJ,EAAWK,OAAQL,EAAWM,QAElF,SAAST,EAAQoC,GACpB,IAAIwB,EAAYP,EAASjB,GACrByB,EAgBR,SAA2BD,GAEvB,IADA,IAAIC,EAAiB,GACZtB,EAAI,EAAGA,EAAIqB,EAAUxC,OAAQmB,IAAK,CACvC,IAAIf,EAAQoC,EAAUE,MAAMvB,GACxBwB,EAAgBvC,KAAQqC,EAAerC,EAAMzD,OAASyD,EAAMzD,OAEpE,OAAO8F,EAtBcG,CAAkBJ,GACnCK,EAwBR,SAAuBC,GAInB,IAHA,IAAID,EAAQ,GACRE,EAAe,EACfC,EAAe,EACV7B,EAAI,EAAGA,EAAI2B,EAAQ3B,IAAK,CAM7B,IALA,IAAI8B,EAAMC,SAASC,OAAOH,GAAe,IAAII,SAAS,GAIlDC,EAAkB,OAHtBJ,EAAM,IAAIK,OAAOP,EAAeE,EAAIjD,QAAUiD,GAG/B,GAAa,IAAM,IACzBM,EAAI,EAAGA,EAAIN,EAAIjD,OAAO,EAAGuD,IAC9BF,GAAmB,MAAXJ,EAAIM,GAAa,IAAM,IAEnCF,GAA8B,MAAtBJ,EAAIA,EAAIjD,OAAO,GAAa,IAAM,IAC1C6C,EAAMT,KAAKiB,KAEXL,IAEqBQ,KAAKC,IAAI,EAAGV,KAC7BA,IACAC,EAAe,GAGvB,OAAOH,EA/CKa,CAAc3F,OAAO4F,KAAKlB,GAAgBzC,QAC9C6C,EAmDFe,KAAK,kBAAMJ,KAAKK,SAAW,KAlDjC,IAAIC,EAqDR,SAAkCjB,EAAOJ,GACrC,IAAIqB,EAAe,GACnB,IAAK,IAAIC,KAAiBtB,EAAgBqB,EAAaC,GAAiBlB,EAAMmB,QAC9E,OAAOF,EAxDYG,CAAyBpB,EAAOJ,GAC/CyB,EA0DR,SAAkCJ,GAC9B,IAAIK,EAAU,GACd,IAAK,IAAIxH,KAASmH,EACdK,EAAQ/B,KAAK,IAAIzC,EAAMZ,EAAWU,aAArB,WAAAa,OAA8CwD,EAAanH,GAA3D,KAAA2D,OAAqE3D,EAArE,QAEjB,OAAOwH,EA/DgBC,CAAyBN,GAC5CO,EAiER,SAAoB7B,GAEhB,IADA,IAAI6B,EAAS,GACJlD,EAAI,EAAGA,EAAIqB,EAAUxC,OAAQmB,IAAK,CACvC,IAAIf,EAAQoC,EAAUE,MAAMvB,GACxBf,EAAMR,OAASb,EAAWM,QACtB8B,EAAE,GAAK,GAAKqB,EAAUE,MAAMvB,EAAE,GAAGvB,OAASb,EAAWO,OAAO+E,EAAOjC,KAAK,IAAIzC,EAAMZ,EAAWO,MAAO,MACxG+E,EAAOjC,KAAKhC,GACRe,EAAE,EAAIqB,EAAUxC,QAAUwC,EAAUE,MAAMvB,EAAE,GAAGvB,OAASb,EAAWO,OAAO+E,EAAOjC,KAAK,IAAIzC,EAAMZ,EAAWO,MAAO,OACnH+E,EAAOjC,KAAKhC,GAEvB,OAAO,IAAIH,EAAUoE,GA3ERC,CAAW9B,GAGxB,OAFA6B,EAAOE,cAAcL,GA6EzB,SAA0B1B,EAAWsB,GACjC,IAAK,IAAI3C,EAAI,EAAGA,EAAIqB,EAAUxC,OAAQmB,IAAK,CACvC,IAAIf,EAAQoC,EAAUE,MAAMvB,GACxBwB,EAAgBvC,KAAQA,EAAMzD,MAAQmH,EAAa1D,EAAMzD,SA/EjE6H,CAAiBH,EAAQP,GAClBO,EAAOI,YAGlB,SAAS9B,EAAgBvC,GACrB,QAAAsE,EAAA,EAAAC,EAAyBpC,EAAzBmC,EAAAC,EAAA3E,OAAA0E,IAAA,CAAK,IAAIE,EAAYD,EAAAD,GAAmB,GAAItE,EAAMR,OAASgF,EAAc,OAAO,EAChF,OAAO,ECZX,IAMMC,cAEF,SAAAA,IAAc,IAAA/G,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAtB,KAAAoI,IACV/G,EAAAC,OAAAE,EAAA,EAAAF,CAAAtB,KAAAsB,OAAAG,EAAA,EAAAH,CAAA8G,GAAA1G,KAAA1B,QACKH,MAAQ,CACTwI,YAAc,GAHRhH,yEAQV,IACIiH,EAASnG,EADEnC,KAAKuI,cAAcC,YAElCxI,KAAKyI,YAAYC,SAASJ,uCAI1BK,MAAM,iEAON3I,KAAKC,SAAS,CAACoI,YAAaO,OAAOC,YAAc,kDAOjD7I,KAAK8I,mBACLF,OAAOG,iBAAiB,SAAU/I,KAAK8I,iBAAiB9H,KAAKhB,sDAO7D4I,OAAOI,oBAAoB,SAAUhJ,KAAK8I,iBAAiB9H,KAAKhB,wCAG3D,IAAAI,EAAAJ,KACGlB,EAAYkB,KAAKnB,MAAjBC,QAQFmK,EAAuB3K,qBAPR,SAAA4K,GAAK,MAAK,CAC3BvI,UAAU,CACNwI,OAAO/I,EAAKP,MAAMwI,YAClB1J,WAAYuK,EAAMpH,QAAQsH,KAC1BxK,YAAasK,EAAMpH,QAAQsH,QAGN9K,CAAyB+K,GACtD,OACItK,EAAAC,EAAAC,cAAA,OAAKC,UAAWJ,EAAQP,KAAM+K,MAAO,CAACC,QAAS,KAC/CxK,EAAAC,EAAAC,cAAC0C,EAAA3C,EAAD,CAAM4C,WAAS,EAAC4H,QAAQ,SAAS3H,WAAW,SAASC,QAAS,IAC1D/C,EAAAC,EAAAC,cAAC0C,EAAA3C,EAAD,CAAM+C,MAAI,EAACC,GAAI,GACfjD,EAAAC,EAAAC,cAACgK,EAAD,CAAsB1I,MAAO,YAAakJ,SAAU,SAAAC,GAAK,OAAItJ,EAAKmI,cAAgBmB,MAElF3K,EAAAC,EAAAC,cAAC0C,EAAA3C,EAAD,CAAM+C,MAAI,EAACC,GAAI,GACXjD,EAAAC,EAAAC,cAAC0K,EAAD,CAAcxH,QAASnC,KAAKmC,QAAQnB,KAAKhB,MAAOoC,UAAWpC,KAAK4J,UAAU5I,KAAKhB,SAEnFjB,EAAAC,EAAAC,cAAC0C,EAAA3C,EAAD,CAAM+C,MAAI,EAACC,GAAI,GACXjD,EAAAC,EAAAC,cAACgK,EAAD,CAAsB1I,MAAO,gBAAiBkJ,SAAU,SAAAC,GAAK,OAAItJ,EAAKqI,YAAciB,eA7D7ExI,IAAMC,WAyElB7C,uBA/EA,SAAA4K,GAAK,MAAK,CACvB3K,KAAM,CACJC,SAAU,KA6ECF,CAAmB8J,GCzEnByB,MATf,WACE,OACE9K,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAC6K,EAAD,MACA/K,EAAAC,EAAAC,cAAC8K,EAAD,QCEcC,QACW,cAA7BpB,OAAOqB,SAASC,UAEe,UAA7BtB,OAAOqB,SAASC,UAEhBtB,OAAOqB,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOtL,EAAAC,EAAAC,cAACqL,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.b440466b.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\n\nconst styles = {\n  root: {\n    flexGrow: 1,\n  },\n  grow: {\n    flexGrow: 0,\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20,\n  },\n};\n\nfunction ButtonAppBar(props) {\n  const { classes } = props;\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton className={classes.menuButton} color=\"inherit\" aria-label=\"Menu\">\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\n            yEeTiFy\n          </Typography>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n\nButtonAppBar.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(ButtonAppBar);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\n\nclass OutlinedTextFields extends React.Component {\n  state = {\n    multiline: 'Controlled',\n  };\n\n  onChange(e) {\n    this.setState({\n      value: e.target.value\n    });\n  }\n\n  getValue() {\n    return this.state.value;\n  }\n\n  setValue(value) {\n    this.setState({\n      value: value\n    });\n  }\n\n  render() {\n    return (\n        <TextField\n          id=\"outlined-multiline-static\"\n          label={this.props.label}\n          multiline\n          fullWidth\n          rows={2}\n          defaultValue=\"\"\n          className={this.props.classes.textField}\n          margin=\"normal\"\n          variant=\"outlined\"\n          ref={input => this.input = input}\n          value={this.state.value}\n          onChange={this.onChange.bind(this)}\n          InputProps={{ classes: { input: this.props.classes.textField } }}\n        />\n    );\n  }\n}\n\nOutlinedTextFields.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default OutlinedTextFields;","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\n\nclass MiddleColumn extends React.Component {\n\n    constructor() {\n        super();\n        this.state = {}\n    }\n\n    render() {\n        return (\n            <Grid container alignItems=\"center\" spacing={24}>\n                <Grid item xs={12}>\n                    <Button fullWidth variant=\"contained\" color=\"primary\" onClick={this.props.yeetify}>Yeet &gt;</Button>\n                </Grid>\n                <Grid item xs={12}>\n                    <Button fullWidth variant=\"contained\" color=\"secondary\" onClick={this.props.deyeetify}>&lt; Deyeet</Button>\n                </Grid>\n                <Grid item xs={12}>\n                    <Button fullWidth variant=\"contained\" target=\"_blank\" href=\"https://www.onlinegdb.com/online_c_compiler\">Try it out: Online GDB</Button>\n                </Grid>\n            </Grid>\n        );\n    }\n}\n\nexport default MiddleColumn;\n","export const TokenTypes = Object.freeze({\n    'null':0,\n    'word':1,\n    'number':2,\n    'string':3,\n    'symbol':4,\n    'space':5,\n    'comment':6,\n    'newline':7,\n    'preprocessor':8,\n    'eof':9\n});\n\nexport class Token {\n    constructor(type, value) {\n        this.type = type\n        this.value = value\n    }\n\n    get length() {\n        return this.value.length;\n    }\n\n    static null() {\n        return new Token(TokenTypes.null, '');\n    }\n\n    static eof() {\n        return new Token(TokenTypes.eof, '');\n    }\n}\n","export default class TokenList {\n    constructor(tokens) {\n        this.tokens = tokens;\n    }\n\n    get tokenString() {\n        return this.tokens.map(token => token.type).join('');\n    }\n\n    get valueString() {\n        return this.tokens.map(token => token.value).join('');\n    }\n\n    get length() {\n        return this.tokens.length;\n    }\n\n    getAt(index) {\n        return this.tokens[index];\n    }\n\n    insertAt(index, token) {\n        this.tokens.splice(index, 0, token);\n    }\n\n    prependTokens(tokens) {\n        this.tokens = tokens.concat(this.tokens);\n    }\n}","export const Symbols = [\n    [\n        '+',\n        '-',\n        '*',\n        '/',\n        '%',\n        '>',\n        '<',\n        '!',\n        '(',\n        ')',\n        '&',\n        '|',\n        '^',\n        '~',\n        '?',\n        ':',\n        '[',\n        ']',\n        ',',\n        '.',\n        ';',\n        '{',\n        '}',\n        '=',\n    ],\n    [\n        '++',\n        '--',\n        '==',\n        '!=',\n        '>=',\n        '<=',\n        '&&',\n        '||',\n        '>>',\n        '<<',\n        '+=',\n        '-=',\n        '*=',\n        '/=',\n        '%=',\n        '&=',\n        '^=',\n        '|=',\n        '->',\n    ],\n    [\n        '>>=',\n        '<<=',\n    ]\n];","import {Token, TokenTypes} from './Token';\nimport {Symbols} from './Symbols';\n\nclass Scanner {\n    constructor() {\n        if (this.constructor === Scanner) {\n            throw new TypeError('Abstract class \"Widget\" cannot be instantiated directly.');\n        }\n\n        if (this.get_first_token('test') === undefined) {\n            throw new TypeError('Classes extending the Scanner abstract class');\n        }\n    }\n}\n\nclass WordScanner extends Scanner {\n    static get_first_token(text) {\n        let word_re = /^[a-zA-Z]+\\w*/;\n        let found = word_re.exec(text);\n        if (found) return new Token(TokenTypes.word, found[0]);\n        return null;\n    }\n}\n\nclass NumberScanner extends Scanner  {\n    static get_first_token(text) {\n        let hex_re = /^-?0x[0-9a-fA-F]+/;\n        let exp_re = /^-?\\d*\\.?\\d+e[+-]?\\d+/;\n        let num_re = /^-?\\d*\\.?\\d+/;\n        let found = hex_re.exec(text);\n        if (found) return new Token(TokenTypes.number, found[0]);\n        found = exp_re.exec(text);\n        if(found) return new Token(TokenTypes.number, found[0]);\n        found = num_re.exec(text);\n        if (found) return new Token(TokenTypes.number, found[0]);\n        return null;\n    }\n}\n\nclass StringScanner extends Scanner  {\n    static get_first_token(text) {\n        let str_re = /^(['\"]).*?(?<!\\\\)\\1/;\n        let found = str_re.exec(text);\n        if (found) return new Token(TokenTypes.string, found[0]);\n        return null;\n    }\n}\n\nclass SpaceScanner extends Scanner  {\n    static get_first_token(text) {\n        let space_re = /^\\s+/;\n        let found = space_re.exec(text);\n        if (found) return new Token(TokenTypes.space, found[0]);\n        return null;\n    }\n}\n\nclass SymbolScanner extends Scanner  {\n    static get_first_token(text) {\n        for (let i = Symbols.length-1; i >= 0; i--) {\n            let text_section = text.slice(0, i+1);\n            for (let symbol of Symbols[i]) {\n                if (text_section === symbol) return new Token(TokenTypes.symbol, text_section);\n            }\n        }\n        return null;\n    }\n}\n\nclass NewLineScanner extends Scanner {\n    static get_first_token(text) {\n        if (text[0] === '\\n') return new Token(TokenTypes.newline, text[0]);\n        return null;\n    }\n}\n\nclass CommentScanner extends Scanner  {\n    static get_first_token(text) {\n        let comment1_re = /^\\/{2}.*/;\n        let comment2_re = /^\\/\\*.*?\\*\\//;\n        let found = comment1_re.exec(text);\n        if (found) return new Token(TokenTypes.comment, found[0]);\n        found = comment2_re.exec(text);\n        if (found) return new Token(TokenTypes.comment, found[0]);\n        // TODO: check for multi line comments\n        return null;\n    }\n}\n\nclass PreProcessorScanner extends Scanner {\n    static get_first_token(text) {\n        let hash_re = /^#.*/; // just a hash seems to be valid\n        let found = hash_re.exec(text);\n        if (found) return new Token(TokenTypes.preprocessor, found[0]);\n        return null;\n    }\n}\n\nexport const Scanners = [\n    WordScanner,\n    NumberScanner,\n    StringScanner,\n    SpaceScanner,\n    SymbolScanner,\n    NewLineScanner,\n    CommentScanner,\n    PreProcessorScanner,\n];","import { Token } from './Token';\nimport TokenList from './TokenList';\nimport { Scanners } from './Scanners';\n\nexport function tokenise(text) {\n    return new TokenList(tokenise_as_array(text));\n}\n\nfunction tokenise_as_array(text) {\n    let arr = [];\n    while (text && text !== '') {\n        let token = scan_one_token(text);\n        arr.push(token);\n        text = text.slice(token.length);\n    }\n    arr.push(Token.eof());\n    return arr;\n}\n\nfunction scan_one_token(text) {\n    for (let scanner of Scanners) {\n        let token = scanner.get_first_token(text);\n        if (token !== null) {\n            return token;\n        }\n    }\n    throw new Error(`The scanners could't match the given input: ${text}`);\n}\n","import { Token, TokenTypes } from './Tokeniser/Token';\nimport { tokenise } from './Tokeniser/Tokeniser';\nimport TokenList from './Tokeniser/TokenList';\n\nconst yeetableTypes = [TokenTypes.word, TokenTypes.number, TokenTypes.string, TokenTypes.symbol];\n\nexport function yeetify(text) {\n    let tokenlist = tokenise(text);\n    let yeetableTokens = getYeetableTokens(tokenlist); // returns dictionary {token value : token value}\n    let yeets = generateYeets(Object.keys(yeetableTokens).length);\n    shuffle(yeets); // so different order everytime.\n    let yeetMappings = mapYeetsToYeetableTokens(yeets, yeetableTokens);\n    let hashDefineTokens = generateHashDefineTokens(yeetMappings);\n    let padded = padSymbols(tokenlist);\n    padded.prependTokens(hashDefineTokens);\n    mapTokensToYeets(padded, yeetMappings);\n    return padded.valueString;\n}\n\nfunction isTokenYeetable(token) {\n    for (let yeetableType of yeetableTypes) if (token.type === yeetableType) return true;\n    return false;\n}\n\nfunction getYeetableTokens(tokenlist) {\n    let yeetableTokens = {};\n    for (let i = 0; i < tokenlist.length; i++) {\n        let token = tokenlist.getAt(i);\n        if (isTokenYeetable(token)) yeetableTokens[token.value] = token.value;\n    }\n    return yeetableTokens;\n}\n\nfunction generateYeets(nYeets) {\n    let yeets = [];\n    let currentPower = 4;\n    let currentCount = 0;\n    for (let i = 0; i < nYeets; i++) {\n        let bin = parseInt(String(currentCount), 10).toString(2);\n        bin = '0'.repeat(currentPower - bin.length) + bin;\n\n        // Make yeet from bin\n        let yeet = bin[0] === '0' ? 'y' : 'Y';\n        for (let b = 1; b < bin.length-1; b++) {\n            yeet += bin[b] === '0' ? 'e' : 'E';\n        }\n        yeet += bin[bin.length-1] === '0' ? 't' : 'T';\n        yeets.push(yeet);\n\n        currentCount++;\n        // if the next one is greater than current max (i.e. all caps), reset\n        if (currentCount === Math.pow(2, currentPower)) {\n            currentPower++;\n            currentCount = 0;\n        }\n    }\n    return yeets;\n}\n\n// In place shuffle\nfunction shuffle(array) {\n    array.sort(() => Math.random() - 0.5);\n}\n\nfunction mapYeetsToYeetableTokens(yeets, yeetableTokens) {\n    let yeetMappings = {};\n    for (let yeetableToken in yeetableTokens) yeetMappings[yeetableToken] = yeets.shift();\n    return yeetMappings;\n}\n\nfunction generateHashDefineTokens(yeetMappings) {\n    let defines = [];\n    for (let value in yeetMappings) {\n        defines.push(new Token(TokenTypes.preprocessor, `#define ${yeetMappings[value]} ${value}\\n`));\n    }\n    return defines;\n}\n\nfunction padSymbols(tokenlist) {\n    let padded = [];\n    for (let i = 0; i < tokenlist.length; i++) {\n        let token = tokenlist.getAt(i);\n        if (token.type === TokenTypes.symbol) {\n            if (i-1 >= 0 && tokenlist.getAt(i-1).type !== TokenTypes.space) padded.push(new Token(TokenTypes.space, ' '));\n            padded.push(token);\n            if (i+1 < tokenlist.length && tokenlist.getAt(i+1).type !== TokenTypes.space) padded.push(new Token(TokenTypes.space, ' '));\n        } else padded.push(token);\n    }\n    return new TokenList(padded);\n}\n\nfunction mapTokensToYeets(tokenlist, yeetMappings) {\n    for (let i = 0; i < tokenlist.length; i++) {\n        let token = tokenlist.getAt(i);\n        if (isTokenYeetable(token)) token.value = yeetMappings[token.value];\n    }\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\n\nimport BigTextField from './BigTextField';\nimport MiddleColumn from './MiddleColumn';\nimport { yeetify } from './Yeetify/Yeetify';\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n  }\n});\n\nclass CenteredGrid extends React.Component {\n\n    constructor() {\n        super();\n        this.state = {\n            fieldHeight:  0,\n        }\n    }\n\n    yeetify() {\n        let original = this.originalField.getValue();\n        let yeeted = yeetify(original);\n        this.yeetedField.setValue(yeeted);\n    }\n\n    deyeetity() {\n        alert('Under construction');\n    }\n\n    /**\n     * Calculate & Update state of new dimensions\n     */\n    updateDimensions() {\n        this.setState({fieldHeight: window.innerHeight - 168});\n    }\n\n    /**\n     * Add event listener\n     */\n    componentDidMount() {\n        this.updateDimensions();\n        window.addEventListener(\"resize\", this.updateDimensions.bind(this));\n    }\n\n    /**\n     * Remove event listener\n     */\n    componentWillUnmount() {\n        window.removeEventListener(\"resize\", this.updateDimensions.bind(this));\n    }\n\n    render() {\n        const { classes } = this.props;\n        const heightStyler = theme => ({\n            textField:{\n                height:this.state.fieldHeight,\n                marginLeft: theme.spacing.unit,\n                marginRight: theme.spacing.unit,\n            },\n        });\n        const HeightedBigTextField = withStyles(heightStyler)(BigTextField); // TODO: Hacky but it works\n        return (\n            <div className={classes.root} style={{padding: 20}}>\n            <Grid container justify=\"center\" alignItems=\"center\" spacing={24}>\n                <Grid item xs={5}>\n                <HeightedBigTextField label={\"Code Here\"} innerRef={field => this.originalField = field} />\n                </Grid>\n                <Grid item xs={2}>\n                    <MiddleColumn yeetify={this.yeetify.bind(this)} deyeetify={this.deyeetity.bind(this)} />\n                </Grid>\n                <Grid item xs={5}>\n                    <HeightedBigTextField label={\"Yeeted Result\"} innerRef={field => this.yeetedField = field} />\n                </Grid>\n            </Grid>\n            </div>\n        );\n    }\n}\n\nCenteredGrid.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(CenteredGrid);\n","import React from 'react';\nimport './App.css';\n\nimport AppBar from './AppBar';\nimport Translator from './Translator';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <AppBar />\n      <Translator />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}